#!/usr/bin/env python
# -*- coding: utf-8 -*-

#############################################################################
##                                                                         ##
##                                                                         ##
## Copyright (C) 2015 ADS CyberSecurity. All rights reserved.              ##
## This document is the property of ADS CyberSecurity, it is               ##
## licensed under the Apache Open Source License                           ##
##                                                                         ##
##  Author: Andy Dove <andrew.dove@airbus.com>                             ##
##                                                                         ##
#############################################################################

"""
@author:       Andy Dove
@contact:      andrew.dove@airbus.com
@organization: Airbus Defence and Space CyberSecurity
"""

import tempfile
from shutil import rmtree
import subprocess
import os
import logging

def nsis_unpack(data):

    if not os.path.isfile('/usr/bin/7z'):
        logging.debug("7 Zip not installed.  Cannot continue.")
        return []
    # Open Temporary Storage

    f = tempfile.NamedTemporaryFile()
    d = tempfile.mkdtemp()

    # Save a copy of the payload
    f.write(data)
    f.flush()

    # unpack files using 7zip
    try:
        cmd = ['/usr/bin/7z', 'e', f.name, '-o'+ d]
        subprocess.call(cmd)
    except:
        logging.debug("Error unpacking Nullsoft Installer file")
        f.close()
        rmtree(d)
        return []

    # read payload files

    payloads = []

    for file in os.listdir(d):
        filename = os.path.join(d,file)
        payloads.append(open(filename,'rb').read())
        return payloads

    # tidy up
    f.close()
    rmtree(d)

class nullsoft_installer():
    RELEASE = "beta"

    def __init__(self):
        self.name = 'Nullsoft Installer'
        self.description = 'Nullsoft Installer'
        self.description_threatintelligence = ""
        self.malware = 'zcryptor'
        self.category = 'CATEGORY_DROPPER'
        self.payload = set()

    def identify(self, data):
        s = 'EFBEADDE4E756C6C736F6674496E7374'
        ident = s.decode('hex')
        if(data[0,2] == 'MZ' and hex in data):
            return 'PACKER_IDENTIFIED'
            logging.debug("Nullsoft Installer file identified.")
        else:
            return 'PACKER_UNKNOWN'

    def run(self, data):
        payloads = nsis_unpack(data)
        for p in payloads:
            self.payload.add(p)

    def get_payload(self):
        if len(self.payload) == 0:
            return None
        return self.payload.pop()

    def extract_payload(self, fname):
        if len(self.payload) == 0:
            return False
        fd = open(fname, "wb")
        fd.write(self.payload.pop())
        fd.close()
        return True


